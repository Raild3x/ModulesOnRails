"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4975],{46492:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new keyboard input capturer.\\n\\n```lua\\nlocal keyboard = Keyboard.new()\\n```","params":[],"returns":[{"desc":"","lua_type":"Keyboard"}],"function_type":"static","source":{"line":55,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"IsKeyDown","desc":"Check if the given key is down.\\n\\n```lua\\nlocal w = keyboard:IsKeyDown(Enum.KeyCode.W)\\nif w then ... end\\n```","params":[{"name":"keyCode","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":72,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"AreKeysDown","desc":"Check if _both_ keys are down. Useful for key combinations.\\n\\n```lua\\nlocal shiftA = keyboard:AreKeysDown(Enum.KeyCode.LeftShift, Enum.KeyCode.A)\\nif shiftA then ... end\\n```","params":[{"name":"keyCodeOne","desc":"","lua_type":"Enum.KeyCode"},{"name":"keyCodeTwo","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":84,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"AreEitherKeysDown","desc":"Check if _either_ of the keys are down. Useful when two keys might perform\\nthe same operation.\\n\\n```lua\\nlocal wOrUp = keyboard:AreEitherKeysDown(Enum.KeyCode.W, Enum.KeyCode.Up)\\nif wOrUp then\\n\\t-- Go forward\\nend\\n```","params":[{"name":"keyCodeOne","desc":"","lua_type":"Enum.KeyCode"},{"name":"keyCodeTwo","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":99,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"Destroy","desc":"Destroy the keyboard input capturer.","params":[],"returns":[],"function_type":"method","source":{"line":126,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"new","desc":"Constructs a new keyboard input capturer.\\n\\n```lua\\nlocal keyboard = Keyboard.new()\\n```","params":[],"returns":[{"desc":"","lua_type":"Keyboard"}],"function_type":"static","source":{"line":55,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"IsKeyDown","desc":"Check if the given key is down.\\n\\n```lua\\nlocal w = keyboard:IsKeyDown(Enum.KeyCode.W)\\nif w then ... end\\n```","params":[{"name":"keyCode","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":72,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"AreKeysDown","desc":"Check if _both_ keys are down. Useful for key combinations.\\n\\n```lua\\nlocal shiftA = keyboard:AreKeysDown(Enum.KeyCode.LeftShift, Enum.KeyCode.A)\\nif shiftA then ... end\\n```","params":[{"name":"keyCodeOne","desc":"","lua_type":"Enum.KeyCode"},{"name":"keyCodeTwo","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":84,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"AreEitherKeysDown","desc":"Check if _either_ of the keys are down. Useful when two keys might perform\\nthe same operation.\\n\\n```lua\\nlocal wOrUp = keyboard:AreEitherKeysDown(Enum.KeyCode.W, Enum.KeyCode.Up)\\nif wOrUp then\\n\\t-- Go forward\\nend\\n```","params":[{"name":"keyCodeOne","desc":"","lua_type":"Enum.KeyCode"},{"name":"keyCodeTwo","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":99,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"Destroy","desc":"Destroy the keyboard input capturer.","params":[],"returns":[],"function_type":"method","source":{"line":126,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}}],"properties":[{"name":"KeyDown","desc":"Fired when a key is pressed.\\n```lua\\nkeyboard.KeyDown:Connect(function(key: KeyCode)\\n\\tprint(\\"Key pressed\\", key)\\nend)\\n```","lua_type":"Signal<Enum.KeyCode>","tags":["Event"],"source":{"line":34,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"KeyUp","desc":"Fired when a key is released.\\n```lua\\nkeyboard.KeyUp:Connect(function(key: KeyCode)\\n\\tprint(\\"Key released\\", key)\\nend)\\n```","lua_type":"Signal<Enum.KeyCode>","tags":["Event"],"source":{"line":45,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"KeyDown","desc":"Fired when a key is pressed.\\n```lua\\nkeyboard.KeyDown:Connect(function(key: KeyCode)\\n\\tprint(\\"Key pressed\\", key)\\nend)\\n```","lua_type":"Signal<Enum.KeyCode>","tags":["Event"],"source":{"line":34,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}},{"name":"KeyUp","desc":"Fired when a key is released.\\n```lua\\nkeyboard.KeyUp:Connect(function(key: KeyCode)\\n\\tprint(\\"Key released\\", key)\\nend)\\n```","lua_type":"Signal<Enum.KeyCode>","tags":["Event"],"source":{"line":45,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}}],"types":[],"name":"Keyboard","desc":"The Keyboard class is part of the Input package.\\n\\n```lua\\nlocal Keyboard = require(packages.Input).Keyboard\\n```","realm":["Client"],"source":{"line":20,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/Keyboard.luau"}}')}}]);