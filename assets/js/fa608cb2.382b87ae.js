"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7178],{77062:e=>{e.exports=JSON.parse('{"functions":[{"name":"__tostring","desc":"Converts the Queue into a string.","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"method","tags":["metamethod"],"source":{"line":54,"path":"lib/queue/src/init.luau"}},{"name":"__iter","desc":"","params":[],"returns":[{"desc":"","lua_type":"_, value: T"}],"function_type":"method","source":{"line":70,"path":"lib/queue/src/init.luau"}},{"name":"new","desc":"Creates a new Queue","params":[],"returns":[{"desc":"","lua_type":"Queue<T>\\r\\n"}],"function_type":"static","tags":["static"],"source":{"line":84,"path":"lib/queue/src/init.luau"}},{"name":"IsEmpty","desc":"Check if the queue is empty.","params":[],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":95,"path":"lib/queue/src/init.luau"}},{"name":"Peek","desc":"Look at the first value in the queue. If ","params":[{"name":"index","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"T?\\r\\n"}],"function_type":"method","source":{"line":102,"path":"lib/queue/src/init.luau"}},{"name":"Pop","desc":"Remove the value at the front of the queue if there is one.","params":[],"returns":[{"desc":"","lua_type":"T?\\r\\n"}],"function_type":"method","source":{"line":112,"path":"lib/queue/src/init.luau"}},{"name":"Has","desc":"Checks to see if a given value exists within the Queue.","params":[{"name":"value","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":126,"path":"lib/queue/src/init.luau"}},{"name":"Size","desc":"Get the number of items in the Queue.","params":[],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"method","source":{"line":138,"path":"lib/queue/src/init.luau"}},{"name":"Append","desc":"Add a value to the back of the queue.","params":[{"name":"value","desc":"","lua_type":"T"}],"returns":[],"function_type":"method","source":{"line":145,"path":"lib/queue/src/init.luau"}},{"name":"Prepend","desc":"Add a value to the front of the queue.","params":[{"name":"value","desc":"","lua_type":"T"}],"returns":[],"function_type":"method","source":{"line":154,"path":"lib/queue/src/init.luau"}},{"name":"ToArray","desc":"Converts the Queue into an iterable array.","params":[],"returns":[{"desc":"","lua_type":"{T}\\r\\n"}],"function_type":"method","source":{"line":163,"path":"lib/queue/src/init.luau"}},{"name":"RemoveFirstOccurence","desc":"Removes the first occurence of a given value in the queue. Returns whether or not it did remove something.","params":[{"name":"value","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":174,"path":"lib/queue/src/init.luau"}},{"name":"RemoveValueAt","desc":"Removes the item at the given index. Returns whether or not it did remove something.\\nIf it did, it will also return the item that was removed. This method should typically\\nonly be used in conjunction with the iterator metamethod.","params":[{"name":"index","desc":"The index of the item to remove.","lua_type":"number"}],"returns":[{"desc":"Whether or not it did remove something.","lua_type":"boolean"},{"desc":"The item that was removed.","lua_type":"T?"}],"function_type":"method","source":{"line":211,"path":"lib/queue/src/init.luau"}}],"properties":[{"name":"ClassName","desc":"","lua_type":"\\"Queue\\"","source":{"line":46,"path":"lib/queue/src/init.luau"}}],"types":[],"name":"Queue","desc":"A generic Queue class for Luau.","source":{"line":9,"path":"lib/queue/src/init.luau"}}')}}]);