"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7058],{67560:e=>{e.exports=JSON.parse('{"functions":[{"name":"Observe","desc":"Observes the preferred input. In other words, the handler function will\\nbe fired immediately, as well as any time the preferred input changes.\\n\\nThe returned function can be called to disconnect the observer.\\n\\n```lua\\nlocal disconnect = PreferredInput.Observe(function(preferred)\\n\\t-- Fires immediately & any time the preferred input changes\\n\\tprint(preferred)\\nend)\\n\\n-- If/when desired, observer can be stopped by calling the returned function:\\ndisconnect()\\n```","params":[{"name":"handler","desc":"","lua_type":"(preferred: InputType) -> ()"}],"returns":[{"desc":"","lua_type":"() -> ()"}],"function_type":"static","source":{"line":96,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}},{"name":"Observe","desc":"Observes the preferred input. In other words, the handler function will\\nbe fired immediately, as well as any time the preferred input changes.\\n\\nThe returned function can be called to disconnect the observer.\\n\\n```lua\\nlocal disconnect = PreferredInput.Observe(function(preferred)\\n\\t-- Fires immediately & any time the preferred input changes\\n\\tprint(preferred)\\nend)\\n\\n-- If/when desired, observer can be stopped by calling the returned function:\\ndisconnect()\\n```","params":[{"name":"handler","desc":"","lua_type":"(preferred: InputType) -> ()"}],"returns":[{"desc":"","lua_type":"() -> ()"}],"function_type":"static","source":{"line":96,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}}],"properties":[{"name":"Current","desc":"The current preferred InputType.\\n\\n```lua\\nprint(PreferredInput.Current)\\n```","lua_type":"InputType","readonly":true,"source":{"line":60,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}},{"name":"Current","desc":"The current preferred InputType.\\n\\n```lua\\nprint(PreferredInput.Current)\\n```","lua_type":"InputType","readonly":true,"source":{"line":60,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}}],"types":[{"name":"InputType","desc":"The InputType is just a string that is either `\\"MouseKeyboard\\"`,\\n`\\"Touch\\"`, or `\\"Gamepad\\"`.","lua_type":"\\"MouseKeyboard\\" | \\"Touch\\" | \\"Gamepad\\"","source":{"line":14,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}},{"name":"Enum","desc":"These are the possible values for the InputType. Used for explicit definitions.\\n```lua\\nprint(PreferredInput.Enum.MouseKeyboard)\\n```","fields":[{"name":"MouseKeyboard","lua_type":"\\"MouseKeyboard\\"","desc":""},{"name":"Gamepad","lua_type":"\\"Gamepad\\"","desc":""},{"name":"Touch","lua_type":"\\"Touch\\"","desc":""}],"source":{"line":73,"path":"lib/basecomponent/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}},{"name":"InputType","desc":"The InputType is just a string that is either `\\"MouseKeyboard\\"`,\\n`\\"Touch\\"`, or `\\"Gamepad\\"`.","lua_type":"\\"MouseKeyboard\\" | \\"Touch\\" | \\"Gamepad\\"","source":{"line":14,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}},{"name":"Enum","desc":"These are the possible values for the InputType. Used for explicit definitions.\\n```lua\\nprint(PreferredInput.Enum.MouseKeyboard)\\n```","fields":[{"name":"MouseKeyboard","lua_type":"\\"MouseKeyboard\\"","desc":""},{"name":"Gamepad","lua_type":"\\"Gamepad\\"","desc":""},{"name":"Touch","lua_type":"\\"Touch\\"","desc":""}],"source":{"line":73,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}}],"name":"PreferredInput","desc":"A helper library for observing the preferred user input of the\\nplayer. This is useful for determining what input schemes\\nto use during gameplay. A player might switch from using\\na mouse to a gamepad mid-game, and it is important for the\\ngame to respond to this change.\\n\\nThe Preferred class is part of the Input package.\\n\\n```lua\\nlocal PreferredInput = require(packages.Input).PreferredInput\\n```","realm":["Client"],"source":{"line":49,"path":"lib/tablereplicator/_Index/raild3x_railutil@1.15.0/railutil/InputUtil/PreferredInput.luau"}}')}}]);