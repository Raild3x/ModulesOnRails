"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1043],{44921:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new PromValue","params":[{"name":"initialValue","desc":"an optional initial value to set the PromValue to.","lua_type":"any?"}],"returns":[{"desc":"","lua_type":"PromValue"}],"function_type":"static","tags":["Static"],"source":{"line":46,"path":"lib/promvalue/src/init.lua"}},{"name":"Set","desc":"Sets the value of the PromValue and fires the Changed signal.","params":[{"name":"newValue","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":65,"path":"lib/promvalue/src/init.lua"}},{"name":"Get","desc":"Immediately returns the stored value.","params":[],"returns":[{"desc":"","lua_type":"any\\r\\n"}],"function_type":"method","source":{"line":76,"path":"lib/promvalue/src/init.lua"}},{"name":"IsReady","desc":"Returns whether or not the value has been set yet","params":[],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":86,"path":"lib/promvalue/src/init.lua"}},{"name":"OnReady","desc":"Returns a promise that resolves with the value when it has been set atleast once.\\nIf given a function then it will run it the first time it is set, this is equivalent to just chaining :andThen().\\nAlias for :Promise()","params":[{"name":"fn","desc":"an optional function to call when the value is set.","lua_type":"((value: any) -> ...any)?"}],"returns":[{"desc":"","lua_type":"Promise<any>"}],"function_type":"method","source":{"line":99,"path":"lib/promvalue/src/init.lua"}},{"name":"Promise","desc":"Alias for :OnReady()","params":[{"name":"fn","desc":"an optional function to call when the value is set.","lua_type":"((value: any) -> ...any)?"}],"returns":[{"desc":"","lua_type":"Promise<any>"}],"function_type":"method","source":{"line":110,"path":"lib/promvalue/src/init.lua"}},{"name":"_peek","desc":"This method allows for PromValues to be used with Fusion\'s peek function.","params":[],"returns":[],"function_type":"method","private":true,"source":{"line":118,"path":"lib/promvalue/src/init.lua"}}],"properties":[{"name":"ClassName","desc":"The name of the class.","lua_type":"\\"PromValue\\"","source":{"line":33,"path":"lib/promvalue/src/init.lua"}},{"name":"Changed","desc":"A signal that fires when the value of the PromValue changes.","lua_type":"Signal<new: any, old: any>","source":{"line":39,"path":"lib/promvalue/src/init.lua"}}],"types":[],"name":"PromValue","desc":"A PromValue is a class that is used to store a value that may not be set yet.\\nThis is useful when you need to run something only after the value has been set atleast once.","source":{"line":9,"path":"lib/promvalue/src/init.lua"}}')}}]);